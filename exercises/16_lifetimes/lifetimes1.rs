// Компілятор Rust повинен мати змогу перевіряти, чи є надані посилання (references)
// дійсними, щоб можна було повідомити програміста, якщо посилання ризикує
// вийти за межі області видимості (scope) перед його використанням. Пам’ятайте,
// посилання — це запозичення (borrows) і вони не володіють своїми даними.
// А що, якщо їх власник вийде за межі області видимості?

// TODO: Виправте помилку компілятора, оновивши сигнатуру функції.
fn longest(x: &str, y: &str) -> &str {
    if x.len() > y.len() {
        x
    } else {
        y
    }
}

fn main() {
    // Тут ви можете за бажанням поекспериментувати.
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_longest() {
        assert_eq!(longest("abcd", "123"), "abcd");
        assert_eq!(longest("abc", "1234"), "1234");
    }
}
